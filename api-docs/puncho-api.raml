#%RAML 1.0
title: puncho
version: 0.1
baseUri: http://ec2-3-15-172-128.us-east-2.compute.amazonaws.com
documentation:
  - title: Welcome
    content: |
      Welcome to the puncho API Documentation.

/user: # optional resource
  description: This is the top level description for /users.

  post:
      description: create a new user
      body:
        application/json:
          properties:
            name:
              description: user object
              type: object
              example:
                {
                    "firstname": "user1",
                    "lastname": "user1",
                    "email": "a@b.c",
                    "birth_date": "1995/08/19",
                    "address": "xyz",
                    "gender": "wizard",
                    "nickname": "xyz",
                    "password_hash": "hashxyz"
                }
      responses:
        201: #USER CREATED
          body:
            application/json:
              properties:
                name:
                  description: user object
                  type: object
                  example:
                    {
                        "firstname": "user1",
                        "lastname": "user1",
                        "email": "a@b.c",
                        "birth_date": "1995/08/19",
                        "address": "xyz",
                        "gender": "wizard",
                        "nickname": "xyz"
                    }
        409: #EMAIL EXISTS
          body:
            text/plain:
              example: "email exists already"
  /login:
    description: login user
    post:
      body:
        application/json:
          properties:
            name:
              description: user object
              type: object
              example:
                {
                    "email": "a@b.c",
                    "password_hash": "hashxyz"
                }
      responses:
        200:
          body:
            application/json:
              properties:
                name:
                  description: user object
                  type: object
                  example:
                    {
                        "firstname": "user1",
                        "lastname": "user1",
                        "email": "a@b.c",
                        "birth_date": "1995/08/19",
                        "address": "xyz",
                        "gender": "wizard",
                        "nickname": "xyz"
                    }
        401:
          body:
            text/plain:
              example: "bad credentials"
        401:
          body:
            text/plain:
              example: "email not found"

  /details:
    /{user_id}:
      get:
        responses:
            200:
              body:
                application/json:
                  properties:
                    name:
                      description: user object
                      type: object
                      example:
                        {
                            "firstname": "user1",
                            "lastname": "user1",
                            "email": "a@b.c",
                            "birth_date": "1995/08/19",
                            "address": "xyz",
                            "gender": "wizard",
                            "nickname": "xyz"
                        }

    /update:
      post:
        description: update user
        body:
          application/json:
            properties:
              name:
                description: user object
                type: object
                example:
                  {
                      "firstname": "user1",
                      "lastname": "user1",
                      "email": "a@b.c",
                      "birth_date": "1995/08/19",
                      "address": "xyz",
                      "gender": "wizard",
                      "nickname": "xyz"
                  }
        responses:
          201: #USER UPDATED
            body:
              application/json:
                properties:
                  name:
                    description: user object
                    type: object
                    example:
                      {
                          "firstname": "user1",
                          "lastname": "user1",
                          "email": "a@b.c",
                          "birth_date": "1995/08/19",
                          "address": "xyz",
                          "gender": "wizard",
                          "nickname": "xyz"
                      }

  /stats:
    /{user_id}:
      get:
        responses:
            200:
              body:
                application/json:
                  properties:
                    name:
                      description: user object
                      type: object
                      example:
                        {
                            "score": 132,
                            "punches": {
                              "total": 100,
                              "perSecond": 2.1
                            }
                            "force": {
                              "perPunch": 6.8
                            }
                            "rank": 12,
                            "workouts": 10,
                            "calories": 12131,
                            "trained": {
                              "hours": 30,
                              "minutes": 12
                            }
                        }

/workout:
  description: This is the top level description for /workouts.

  get: # HTTP method declaration
    responses: # declare a response
      200: # HTTP status code
        body: # declare content of response
          application/json: # media type
            type: | # structural definition of a response (schema or type)
              {
                "title": "get collection of all workouts",
                "type": "array"
              }
            example: # example how a response looks like
              {
                "workouts":
                [
                    {
                      "id": 0,
                      "title": "some_title",
                      "description": "some_description",
                      "start_time": "2019/8/8/14:00",
                      "end_time": "2019/8/8/15:00",
                      "w_type": "punchbag"
                    },
                    ...
                ]
              }
  /upcoming:
    description: Get upcoming workout

    get:
      responses:
        200:
          body:
            application/json:
              type:
                {
                  "title": "json object of upcoming wokrout"
                  "type": application/json
                }
              example:
                {
                  "description": "workout x",
                  "end_time": "2020-09-02T11:31:26+00:00",
                  "id": 9,
                  "name": "asdasd",
                  "start_time": "2020-09-02T10:31:26+00:00",
                  "w_type": "asdasdasd"
                }

  /summary:
    uriParameters:
      user_id:
        type: string
        description: user id
        minLength: 1
        maxLength: 10
      workout_id:
        type: string
        description: workout id
        minLength: 1
        maxLength: 10
    get:
      description: get summary of some user's specific workout
      responses:
          200:
            body:
              application/json:
                properties:
                  name:
                    description: summary object
                    type: object
                    example:
                      {
                          "name": "workout x",
                          "start_time": "2019/8/8/14:00",
                          "start_time": "2019/8/8/15:00",
                          "w_type": "punchbag",
                          "avg_hr": "99",
                          "max_hr": "150",
                          "kcals": "339",
                          "punch_score": "12341",
                          "punch_count": "1291"
                      }

  /{user_id}:
    get:
      description: get all workouts for some user
      responses:
        200:
          body:
            application/json:
              properties:
                description: list of summariezed workouts
                type: object

  /day/{date}:
    get:
      description: get all workouts for some day
      responses:
        200:
          body:
            application/json:
              properties:
                description: list of workouts
                type: object

  /details/{workout_id}:
    get:
      description: get full workout object by id
      responses:
        200:
          body:
            application/json:
              properties:
                description: workout object
                type: object
              example:
                {
                  "description": "workout x",
                  "end_time": "2020-09-02T11:31:26+00:00",
                  "id": 9,
                  "name": "asdasd",
                  "start_time": "2020-09-02T10:31:26+00:00",
                  "w_type": "asdasdasd"
                }
/booking:
  /{user_id}:
    get:
        responses:
            200:
                body:
                    array:
                        type:
                            {
                                "title": "get list of all workout ids for specific user id - list of ids of all workouts the user is registered to",
                                "type": "array"
                            }
                        example:
                            [
                              {
                                "id": 0
                              },
                              {
                                "id": 1
                              }
                            ]
  post:
    description: create a new booking
    body:
      application/json:
        properties:
          name:
            description: booking object
            type: object
            example:
              {
                  "user_id": "1",
                  "workout_id": "1"
              }
    responses:
      201: #BOOKING CREATED
        body:
          application/json:
            properties:
              name:
                description: booking object
                type: object
                example:
                  {
                      "user_id": "1",
                      "workout_id": "1"
                  }
      409: #BOOKING FAILED
        body:
          text/plain:
            example: "workout full"

  /remove:
    post:
      description: delete a booking
      body:
        application/json:
          properties:
            name:
              description: booking object
              type: object
              example:
                {
                    "user_id": "1",
                    "workout_id": "1"
                }
      responses:
        201: #BOOKING DELETED
          body:
            application/json:
              properties:
                name:
                  description: booking object
                  type: object
                  example:
                    {
                      "ok":"ok"
                    }


/punch:
  /{user_id}:
    get:
        responses:
            200:
                body:
                    array:
                        type:
                            {
                                "title": "get list of all punchesfor specific user id",
                                "type": "array"
                            }
                        example:
                            [
                              {
                                "force": 0
                              },
                              {
                                "force": 1
                              }
                            ]
  /latest/{user_id}:
    get:
        responses:
            200:
                body:
                    application/json:
                        type:
                            {
                                "title": "object with latest score and punch count for specific user id",
                                "type": "object"
                            }
                        example:
                            {
                              "score": "1001",
                              "punch_count": "43"
                            }
  /latest-with-hr/{user_id}:
    get:
        responses:
            200:
                body:
                    application/json:
                        type:
                            {
                                "title": "object with latest score and punch count for specific user id",
                                "type": "object"
                            }
                        example:
                            {
                              "score": "1001",
                              "punch_count": "43"
                              "hr": "100",
                              "kcals": "2213"
                            }
/hr:
  /latest/{user_id}:
    get:
        descrpiption: get instantaneous heart rate
        responses:
          200:
            body:
              application/json:
                properties:
                  name:
                    description: object with hr data
                    type: object
                    example:
                      {
                          "hr": "100",
                          "kcals": "30"
                      }
  /avg/{user_id}:
    get:
        description: get current average heart rate
        responses:
            200:
                body:
                    string:
                        example:
                            "100"

/weigh_in:
  /{user_id}:
    get:
        responses:
            200:
                body:
                    array:
                        type:
                            {
                                "title": "get list of all weigh ins specific user id",
                                "type": "array"
                            }
                        example:
                            [
                              {
                                "data": "TBD"
                              },
                              {
                                "data": "TBD"
                              }
                            ]

/link_bag:
  post:
      description: link user to bag
      body:
        application/json:
          properties:
            name:
              description: object - uid + bagid
              type: object
              example:
                {
                    "user_id": "1",
                    "bag_id": "001"
                }
      responses:
        200: #linked
          body:
            application/json:
              properties:
                name:
                  description: object
                  type: object
                  example:
                    {
                      "success":"True"
                    }
        409: #failed
          body:
            application/json:
              properties:
                name:
                  description: object
                  type: object
                  example:
                    {
                      "success":"false"
                    }

/end_session:
  post:
      description: reverse of link_bag
      body:
        application/json:
          properties:
            name:
              description: object - uid + bagid
              type: object
              example:
                {
                    "user_id": "1",
                    "bag_id": "001"
                }
      responses:
        200: #linked
          body:
            application/json:
              properties:
                name:
                  description: workout object
                  type: object
                  example:
                    {
                      "description": "workout x",
                      "end_time": "2020-09-02T11:31:26+00:00",
                      "id": 9,
                      "name": "asdasd",
                      "start_time": "2020-09-02T10:31:26+00:00",
                      "w_type": "asdasdasd"
                    }

/subscription:
  post:
      description: add new subscription/tokens
      body:
        application/json:
          properties:
            name:
              description: object - uid + start_time + end_time + entries
              type: object
              example:
                {
                    "user_id": "1",
                    "start_time": "SOME PYTHON COMPLIANT DATETIME",
                    "end_time": "SOME PYTHON COMPLIANT DATETIME",
                    "entries": 12
                }
      responses:
        200: #added
          body:
            application/json:
                properties:
                  name:
                    description: subscription object
                    type: object
                    example:
                      {
                        "user_id": "1",
                        "start_time": "SOME PYTHON COMPLIANT DATETIME",
                        "end_time": "SOME PYTHON COMPLIANT DATETIME",
                        "entries": 12,
                        "entries_left": 12
                      }

  /{user_id}:
    get:
      description: get current subscription by user id
      responses:
          200:
              body:
                  application/json:
                      properties:
                        name:
                          description: subscription object
                          type: object
                          example:
                            {
                              "user_id": "1",
                              "start_time": "SOME PYTHON COMPLIANT DATETIME",
                              "end_time": "SOME PYTHON COMPLIANT DATETIME",
                              "entries": 12,
                              "entries_left": 12
                            }